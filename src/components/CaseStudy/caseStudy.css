:root {
    --card-height: 40vw;
    --card-margin: 4vw;
    --card-top-offset: 2em;
    --card-bottom-offset: 1
}  
  
  #cards {
    padding-bottom: calc(var(--numcards) * var(--card-top-offset));
    margin-bottom: var(--card-margin);
    list-style: none;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(var(--numcards), var(--card-height));
    gap: var(--card-margin);
    outline: calc(var(--outline-width) * 10) solid blue;
  }
  
  .card {
    position: sticky;
    top: 0;
    padding-top: calc(var(--index) * var(--card-top-offset));
    padding-bottom: calc(var(--index) * var(--card-bottom-offset)) !important;

    outline: var(--outline-width) solid hotpink;
  }
  
  .card__content {
    box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
    background: rgb(255, 255, 255);
    color: rgb(10, 5, 7);
    border-radius: 1em;
    overflow: hidden;
    display: grid;
    /* grid-template-areas: "text img"; */
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto;
    align-items: stretch;
    outline: var(--outline-width) solid lime;
  }
  
  .card__content > div {
    grid-area: text;
    width: 80%;
    place-self: center;
    text-align: left;
    display: grid;
    gap: 1em;
    place-items: start;
  }
  
  .card__content > figure {
    grid-area: img;
    overflow: hidden;
  }
  
  .card__content > figure > img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  @supports (animation-timeline: works) {
    @scroll-timeline cards-element-scrolls-in-body {
      source: selector(body);
      scroll-offsets:
        selector(#cards) start 1,
        selector(#cards) start 0;
      start: selector(#cards) start 1;
      end: selector(#cards) start 0;
      time-range: 4s;
    }
  
    .card__content {
      transform-origin: 50% 0%;
      will-change: transform;
      --index0: calc(var(--index) - 1);
      --reverse-index: calc(var(--numcards) - var(--index0));
      --reverse-index0: calc(var(--reverse-index) - 1);
      --duration: calc(var(--reverse-index0) * 1s);
      --delay: calc(var(--index0) * 1s);
      animation: var(--duration) linear scale var(--delay) forwards;
      animation-timeline: cards-element-scrolls-in-body;
    }
  
    @keyframes scale {
      to {
        transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
      }
    }
  }

  
  
  
  
  :root {
    --card-height: 40vw;
    --card-margin: 4vw;
    --card-top-offset: 1em;
    --card-bottom-offset: 1em; /* Added for bottom offset */
    --numcards: 4;
    --outline-width: 0px;
  }
  
  .card {
    position: sticky;
    top: 0;
    padding-top: calc(var(--index) * var(--card-top-offset));
    padding-bottom: calc(var(--numcards) - var(--index) * var(--card-bottom-offset));
    outline: var(--outline-width) solid hotpink;
  }
  
  @supports (animation-timeline: works) {
    .card {
      --index0: calc(var(--index) - 1); /* 0-based index */
      --reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
      --reverse-index0: calc(var(--reverse-index) - 1); /* 0-based reverse index */
    }
  
    .card__content {
      transform-origin: 50% 0%;
      will-change: transform;
  
      --duration: calc(var(--reverse-index0) * 1s);
      --delay: calc(var(--index0) * 1s);
  
      animation: var(--duration) linear scale var(--delay) forwards;
      animation-timeline: cards-element-scrolls-in-body;
    }
  
    @keyframes scale {
      to {
        transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
      }
    }
  }
  
  
  /* Global and Page Styles */


  